(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    128784,       2510]
NotebookOptionsPosition[    123951,       2425]
NotebookOutlinePosition[    124433,       2442]
CellTagsIndexPosition[    124390,       2439]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["PACLET INITIALISATION",
 FontWeight->"Bold"]], "Title",
 CellChangeTimes->{{3.9343490712928734`*^9, 
  3.934349078612238*^9}},ExpressionUUID->"e6f37238-6fe6-0443-aea2-\
f11ebdf6899b"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["RELOADING IF PACLET CRASHES",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{{3.934351876301964*^9, 3.934351890334528*^9}, {
  3.934352088562544*^9, 
  3.934352094270773*^9}},ExpressionUUID->"96e5cfa5-8219-3d4e-b588-\
1ecefcd57b6f"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["IF MATHEMATICA CRASHES DURING YOUR ASSESSMENT\n",
  FontWeight->"Bold"],
 "Reload a Mathematica file and run  ",
 StyleBox["<<Chakshu`",
  FontWeight->"Bold"]
}], "Text",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.808205168662465*^9, 3.808205214395193*^9}, {
   3.808205335902199*^9, 3.808205375477358*^9}, {3.8082056091035376`*^9, 
   3.8082056346911063`*^9}, {3.8082056780970535`*^9, 
   3.8082057297907734`*^9}, {3.808207408134607*^9, 3.8082074126395617`*^9}, {
   3.808285566738563*^9, 3.8082855706809835`*^9}, {3.8082856287315006`*^9, 
   3.8082856439408593`*^9}, 3.808285748477247*^9, 3.8082877269319415`*^9, {
   3.8441386261526546`*^9, 3.844138639968153*^9}, {3.8607693346486464`*^9, 
   3.8607693480406156`*^9}, {3.862779245812937*^9, 3.8627792703671722`*^9}, 
   3.862779358500209*^9, 3.8642524792009163`*^9, {3.8759458525560436`*^9, 
   3.8759458542212076`*^9}, {3.9343517803706055`*^9, 
   3.9343517958716087`*^9}, {3.9343518704000263`*^9, 
   3.934351870888645*^9}},ExpressionUUID->"3c21b3e9-d7d4-574c-9c37-\
5b2d412d5db6"],

Cell[BoxData[
 RowBox[{"<<", "Chakshu`"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.8082053474084234`*^9, 3.808205365310545*^9}, {
   3.808205629255645*^9, 3.8082056346911063`*^9}, 3.8082056780970535`*^9, {
   3.8082057321674137`*^9, 3.808205768130231*^9}, {3.808207419576006*^9, 
   3.8082074288212824`*^9}, {3.8082855745147305`*^9, 3.808285576488453*^9}, 
   3.8082877269329395`*^9, {3.862779275376676*^9, 3.8627792763876925`*^9}, {
   3.9343517758480473`*^9, 
   3.93435177747987*^9}},ExpressionUUID->"ad98d4c7-c1a9-8445-8c2c-\
6f1b7756010b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Download and Locating where to put the Paclet", "Subsection",
 CellChangeTimes->{{3.9343519034794025`*^9, 
  3.9343519140300198`*^9}},ExpressionUUID->"52d7a88b-cf8b-8248-b983-\
d1f5cbf77f5a"],

Cell["\<\
Since you already have downloaded the Zip file, extract it from the file onto \
your downloads or your desired directory\
\>", "Text",
 CellChangeTimes->{{3.934349083072525*^9, 
  3.9343491238221626`*^9}},ExpressionUUID->"16b05503-5187-614f-b6a9-\
8d2e6c25b7eb"],

Cell["\<\
After you have extracted the files into your desired directory, click Win+R \
\>", "Text",
 CellChangeTimes->{{3.9343491288727016`*^9, 
  3.934349171802744*^9}},ExpressionUUID->"443b70ba-c31f-a04e-8146-\
412788dd3a44"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3XmYHHd95/HZ3WefzX84eZKAiQHbGGwCtjFXGNmBEJslYCABxwnZJH+E
tYY4EGPA2A7ZAHHWD5vdQAvwbfmUMTK+jTSWLes+RrdkaXzNWJr7PnvOnhmN
tL+q6qPu+lV1nd3v1/O1Hk9PddWv6ldVn66r55yvfvPLTf+5oaHhO78h/vny
3930qW9/++/+6aozxA9XX/eda7923cprPnvdDSu/tvLbH//qfxEv3vqfGhoe
FcMr/z81XchOzUtX4k11qKn51JV16bkMkKp2JtsejyoEqqjH713Tfirq8VM1
UzNZrQWl8oUUlb55rkPOWur1Y0eTD8Gq4t72V4k3NSNZ7xSjTqGftnYmvvTc
KpOJ72sfTtxTfivp+A4U9+kJfWsLfY5BhH7yUSgfkek/lk8+aPyU+3mSxJvn
0s7Em+RdIYZ7sPGHH8dxfpygarWSDvHMJr5tC/2PJ/mUtC/JhEq8nZmNe/vl
mcpUTXPb7CvquJeZRMiJHMMnCqoeKukQD5r4iYd+LSd+Nq/Xh5JlKamYIzLO
tkU4g/Lxl67El9lRk/VUWJV0jlcX/emJ+xpJfJdkT2vcxxBzxH2IcR/VbGYy
8WV20cQ9FXolHeIZCX33VgVI/Jh37wEjIOlMDxzrPuaxPvI98HKIYlohz05E
4S4/rXDiOMQJJR4rVJor6RBPfeJ7torEz0Tc288jiV97iR/RcovwAD/caSWe
KVSaK+kQD5r4sYV+FImfeJiaKwuJn3hMZyju09DOmOY96sQPLehdQjmsaSWe
JlT6K+kQrzr6k437Gkl8a+inKeuJe+K+dhM/rGklHiVUJirp7E5r6Mu3JMrE
Pz48vXJ3zxdfevMLG4v1+Rff/PwL7Veq9bkN7Z97vlifbW5Tan3bn6wT9cZn
1in/v+rwUH4q6fiWj/VIIyySsvvUFEOmh76som5Dssukqgo97iOZVrihwNmG
Gq6kgzuVie+rJWEn/uDk/OGBufUd06tfzV97KP/f90/nOufv6pq/s2v+js75
OzrmRN3eMXfbibnbjot/539+fO5not6c++mbs6valcq1KXXV7sk/2TZ+onck
+XCvJu4Dp1jcce9/vqIoEj/Mykbck/iUfCUd3GEkfkih/7Yzz7zxu//kmfg3
3fS93/7dt0aY+Pn5w4NzzZ0zIvH/x7783x+dac0vaXVM1OTS0cmllyeUOiJq
fOmQWgfHlDowuihq/4hSP2yd+YvNQ6PjM04TajA655xzr7mmqbOrP+HETz7K
0534oc9I1O1JPrj9VuhB75L44Yw5xEQg32u+ks7u8KK/usS/6cbv/df/9hvf
/e7NLpMTvxXDiNCPLvEnp+aHx6b7hyY6ekf+ct/UrW/MakF/ZGz+wNDM/sHp
/YMz+wZn9g5M7x2Y2dM/LapFVN/07r7plsG5fSOLe4eV+utdEzds6XCZkJby
t/zbraJuuOGmSz70YfGK+Dfa0I85zmIL/XjCiLiPo+o38Yn7+qykQzyh0C8F
ulPo2/827MQXlZ+an8zPjUzOrdg28WDn/NGJpZah2b87PPGpvfk/2pP/ZEv+
Ey2Tn9g1+Ye7Ji/bOXHp9olLt42v2DreuGXs6h0jW3qm9wwttgwtfqx5ZPWx
UffEv/yKT+tfEcf44sVVP70t2liPLc78prZbpSC/Es93X+1JdllVVRGFe3TT
Cr6rT8knDSrxSjrEY09891h3+TAQwVn9QwPKWf0fHclfunmiuX/hyPjSY8cn
PrErf1fn/FMDhaf6lXqyT63ewhO980r1zH/38NRFz4+seX189+DiM52Fi54d
eunVXl+JL47urS/GFPehJFpUcR/jUXykyyfO9iS+uAJW9uI+cPIm+EmDSlsl
HeLBEj9gBOsT3zbc3Y79w078gcm5QwOzIvGv3zd5xZbxlpGFQ2MLP3p57Ko9
k/mF5VPOnu2a/8CzQxuOT+4cWPhp68wHnx7sHJrylfjWF2WGEf8vXhGfFm64
4aYzzvhN7WLBE088HXl+1V7iRzqzcbYt+eD2W6GFr0TihzmtanbyZD2lr6Rz
vOoKFPfWiHc/1R964uen5scmZoZHp67fM/rXuyYOji4eGC5cu3Pw6/vzy26B
f+rfj0x98tm+rd2zO/oXvrlr/IqnOt0nZE3zo8deEy+K4A6Q+OLfyy//9C23
3HrDDTeeccYZ4pUXXtiUTLSFHvrxhA5xn2RlMvGr2b0T95RtJR/ckSa+89u1
oG9sXOFxO19kif/Z5t6bD+b3Dy+29M9e3jywctd47/RS/0yx+ozVmV/88w3D
f7uhb1vP/LbehT/bMPKPWwb9Jv5VV10tXhS575b4U/PKi5d/urwHE/8vXrnm
mqbyKyLrxStXXfXnCUSbjzRPPGUiWyZJtS3xxRi8Igr3cKcVPHZDbEDikURF
Xclnd0SJ7zUGLe7Fv9V+rvB1HV95Hn/28bapi58d+vkrM/uGF186MXH+r/rP
e6z/3Wv7z/1l37mP9p3zi76z1/SKetdDPe98sOcdD/acdX+3qO9tG9zSU9jQ
Wfjo4wO3Hxr3THz9vfri/8844zfvf+Bht08F6h7DNvGPHn1Vv1dRx3ZGHOkW
MO6D7asjKxI/yYoz7quZXMDktTSVxKfcKvnsjij0Xd+b1DG+lvi3t+bf/+TQ
Ux1ze4cWHj42dvYjar4/3PvOh5R8f4fI9/u6f29199tXd7393q4z7+58212d
b72z444DI5u7C4+8NnvBI307uxyfxC+nuel5fP3Rvd/EN+3WKi/GlO+pT/zY
ZjypNocyrVg7pfrYTWa6fnfg8X/GoLJeyWd36NEvEfeJXMfXTuzfdXjkoicH
WgYWdg8svNQ5dcUTPe9+oPvc+7vOua/r7NVd77q38133dL7z7o533NVx1p0d
Z91x4qzbT/zxLzrXtU9v6ir8vwP5cx/oHp2ckz+rv+qnt2kP4zsOo9tl+Uj8
xOLeNfRjjRX/0Vm3cR936Gcy8f3uuol7KnAlH9yhJL7XwMneq699A8/XN5z4
wvPDu/oXRO3sK2zrnt1yYmpTR37TiamXjudFbRT1Zv7FN/MvtIua3CD+/8Ss
iHtR/7hp9IrH+zy/Ud90/K6F/i233KrfO5nC3fbFhBK/kMRRYdVxltp8D9zm
KKYVU9fEEO7VT9df7IY1IeKe0ir57K4y8f3HvUfoh534AxNz+/pmP/XM4PU7
xnf2LewQ1buwXa1tPYWtPYUt3UptFqXme6U6Cy91FjZ2FD7/1MA3N7g9ie90
xl6L6V279pZ3GsqB/yUf0u9GxG9TkPipvBbvVCS+32nF0S/Zi3vP5A13WiQ+
pVXy8R1ZpeE79wbz81u7Zz+0tu+yJwa+s33s29vHvrVNra1j128Z/eaW0eu3
jl23eVQcyIu6Tvz70sg3RG1U6usvjlzz/NA5d3XevitI4mtpro/4q676c9Nn
AO0Vm8Q37rS1R/ZqLfGjy+744z61bYi2E4NFXjLT9btnrm4eyXdKthJP6lDq
pptS8b362nX8W7f2fPTuwx+5S6kP33HoQ1rdfugSUbcd+uDPD4q6+GcHL/75
gYt/euAiUasqdeVDr7zRl/eR+Lpd0y233Ko/t//EE0+LH8844wzxiigR7ulI
/KhzIbKITMnsp7YNkfdjZhLf70646nkk7ikflXheV1nT+fnf/t23GqLcoW68
8Z/eduaZVSV+5Ls1qbK9Rt/Z2ac9WFd+2k6EvnhFy/0bbrhRDGBOfLtwDyfx
k15Elcp0voc+L1G0IaaujCHcg03XX+yGOC3ingpWiad29aEf5I2ZTfzQKitJ
l855JPHj6+tsxL1n8oY7LRKfClaJR3YyVW+Jn9GYS3ZeYl4OmWtPtB0tH3lJ
Tddf5oY1LRKfCqWST2ESP6JKc8yldl7SFq9pa0/kfZ2ZxJfZu4Y1LRKfCreS
z2ISP9xKPDtSOy/pWSZpa1sq1oEYwl1+uv7SNqJpkfhUFJV8HJP4IVYaEiSd
85KeZZK2tqViHchA3NumbXTTIvGpiCr5RCbxg1XKoy3+NkddaZ7HKNoW/grg
lOxxJn6YgRvptMh6KqJKPpRTFvpR7nBCqjTER6ranMVITXPbIlkHairxo54W
cU9FV8mHMokvX8HTIbnvuk88smPIuzS3M+p5l6o4k12+DZIV57SIeyrySj6X
UxP6SeyI/FTAgEj0u+4TD3ESn8SPNe6rmRyJT8VRyedyShLf6/tvE63AARFj
4ice2RHFaOJti7qdcQdu9KtiOMmbzHQTTwSq5iv5aCbxowv9eHawiUdh2mI0
K+1MIHnjWSczmfiJZwFVJ5V8OpP41XwSiGkvGnbcpC03UztfUbQz2XUm8ooh
3KufbsC4D+PzTHyVeLpRtpV8QCeV+OrASQd3FZX43jXxQCTxSXxDZS/uazjx
Cf3UVvIZHXPi6wZOPrizkviJx1+I0Zl4e1KyHKpfH2JeCcMM3KSmGzAQE49v
Er+WKvmYji3xjQMnH9zpz/qpKDMo/phLvD0pWQ5hrQ8JRHwoyZvUdOsl7sn9
lFfySR114tsNnHx8pyfWZXbvKa+MzkvU7Yx6fUh4FY0h3INNN3gIJh7TfACo
h0o+rKNLfIeBk0/2lMe97R7euaZjqXjmhcSXXYZJrp/Zi3vP1Es8lAn9+qnk
8zrexJ8EAAB14DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAhK65qaGhoak56WZkRXtzU2ODimUWpQDLWWZN
VodpzLVX30DfEpw0gCi154p7K3upygoS3wd1YTU0NuWac+K/pFtTuwItZxK/
3qn7XRYxYtcudlRljUr6NzZWXmhKbpUU7Wo0bREkvjTtgxzLKmoBlzOJnzI2
e5toBUz82NvpIW3tgT8pilS7LSJFzUs7DiHiEXTHTeKnSvybS7Appm2zTlt7
gltePv3s0NK3Xp/7xmv29fVXtZpV6pXZfyhXq1LXanVsplx/f9RYL898Tanp
rx0pVpNa1x6Zuadjfn45odlOUaSS+FWpnU0x3Uj8mkDiB5O29gT32MDCZftn
tLp03/Sl+2bUmr50r1IrRO0pVmOLqCmtPr67VLum/kDUznyxduQ/Vq7t+Y8q
NfnRbcX6yNZSbZn4sFr/3DqTzGxbdkQOm77u5fJb2nOl+5eU6wLNlpVAub+p
fMuA3QDGsRsUW1CZVrNuWrlqpmUcrW4WrNcz2tUzWJWxGqdbGom+acUlaXjJ
Zuvw11rrW0xtsSw+ty3SfaasJLq7fKK7ON+6ybs1W98g/dIyroKOI4+sd9wX
hdNy9phTm8T3mHGb0Uovdi/+J+20ppgHKg5jGwzmCyIRbUFeW7fj3sZxYbkt
B+lesCyS6trpe8WQ3Ok5j9nvckuD+aXlkfmTx6eWjowt7hgsrO+Zf+zE3L1v
zPykdfoz+6e1oP/coZkvH5n98uEZUV8SdahSf3awVAem/1Sr/Up9UdQ+UVOi
viBqr1p7pj5frpapK4uVv3J3/nNa7cpfunXyQ5smRH1883gyR/nWHZFt5OsH
0/6/Saw1jcra31ze8RpGo611xiGcN4Z2bSBte1K166aVy5WmVZqUcUy+piU9
2vINWrlS4+w2WOVWiCbDEM250nzYLhj/rVUm1Whsi7Ex1sXnODavmXJaVq7d
XdzD5Eq3hJZG6NFsfYN0o240LhGHkUfVO26cl7P3nNp/tHab8dNeq4rTYvck
M2mZvitlQGkgMVQpQXwkfuhbkNfW7bi3sV9WHstBuhccEj9QO4OsGFXvS30t
t5RQE39ZJP7h0QWR+M/3LWiJ/39bp1e0TInj9//ZOtdXODW4IGp5sLA8UKp+
reaX+0rVO1esnnLNLneXqkvUjFKdpeoQNa3UCV0dHDv58c0Tl2wc/8Mt48un
TiWwRGwOPWwi3zBUaTO32XGXR1R8g2UI14NPp7P6tklsOVLwMy2Z0Sq3qNh/
mDeORP+OJstGX9yAzLsj/61ttN3pmdPBc6fvNVMOU3fv7tLTH8YjDZlmO61r
lsS3HshF0jsSbJaz9Jyamuc+456risOS8SI9aY85cl148okf/hYktXVLbi7e
y0G6F+wTP0g7g60Y4exLM3ZWXyT+sHqMryV++Rj/f71cPEv/4xOF12ZOvjZ9
8tVSvTJVqVat8iePleqoqEmlXi7VkYlKHRY1fvJQqQ6Wa0ypA2MnD42dvHzr
xAdfHP+bPflklojd5UXn00+Vnyx9btialUEsQ3hdyXROfNObrNu332lJjNa7
gY57TptzHYaF56+1TplsXlwBN0XPt0l0d3EP4zbfttNzGMburL73kXgYvSPD
ssDkOsjQx1Iz7rmqyC4Za6s8Ji01R+6bi3zih78FSW3dMpuL1HKQ7gWHxPff
zoArRjj70qwm/svjhrP6Xz9UvBb/1MBCMein3YL+WCnobbP+sCXrD41VUl6t
pQOjS/tHlzYPLl68YUzU/34lLdfxFXY7T+vVN7sx6c4f2XNZV6Tv3LPuePxO
S2autdeatUcZG8sXthwXi9QsBGit48cB0y/kN0W3mZKevn5XYbdnlGm2xKhd
Qzns3pHi8XnYadzOP5jeIL9iB3pOUHrSHnPksbr5uo7v8T6/W5DU1i2zuUj1
rHQvyK043u0MumKEsy/NWOKfPHV67uTy1OLyWGF5cO5kz8zSiamlNyYXrz82
8wc78yt25fdNLBmCPl8J+nLEH51cUiJ+QqlSyi+JfNeqlPJLB8cMdUCr0WLW
i9o3uvTA8fkLnx+9sHn0qZ75ZJaI/UptWQ8k9nDmxG8sXuoxCXBW33st9Tst
mW2tfO9Qo/p1Bblc8RJW9Ynvr7WhJr7nTElPP+HEj6R3pMSa+K6rSqKJ73FG
LNrEd9+C6iHxA6wY4exLM5b4Tq7aN/Wx7fnP7ZkyBP3k0pHxhQNDM/v683tF
9Sm1p1QtonqV2q3UpPh3V8/krp68WpM7S7WjW6ldfdN7hwr7y1k/UqwfHJ35
wPrRD6wbaZ9aSmbOHVZqXb9azvS47TOk9gYOqkp8f9PyHq3dRUr3Ux9SsxCg
tSEmvsRMSU/fa6cXaeJH1DtSYk58l/6s32N899W8PhLf94oRzr60FhI/v7j8
8e3Ks3J/f2SmclA/efLw6Pyjb4595dDkpw9MK7V/6gqt9k1dvletPfk/FtWS
/5So3aIm/0jUrsk/2jn5SVE7RE18YrtSf7pz7O7WkZaBOS3o92o1vPS3uybf
v27kw80jhZMJPZDvtFKXO9Z6acd+vfA65vMWLPHD2+1ZV373S2xB9ldBrxt7
XUx0mLaJxEw5vMm1u11C2b3Z9k02xbnsx4kQekdKaNfxPWbce1UJtOpXM2nP
LcSjbdpZ4+oSX2KmQ0t8H9fxY0z8oCtGOPvSjCX+KfXE/tLyKZGwcyeXZxeX
pxeX948tfmTL5Ie3TPzojTkt648pJ+0XX+ic+NQ+w8P4ypP4+gfw1UfvDQ/d
6x63Vx6036zUhzYrz999dNP4r94Y2zO0qGX9nuGl3UNLjRtGf/+5kau3jiW2
RJy3Wy3qc5bAL13tMbzJdi9tHm97zvVbyKWPFI0rXZBpBfm422x+AixQpgRu
re0Nw/rXZBPffaYc3iTT3bZ7GPdm2xyrtxen5534EfSODJuxyHSQ3WogM+Mu
q0oVH6w9Ji0/Rw1Od6g7rKBVJ77EFiSfpJ4LT3odjjbx7bY+3ytGOPvSYCtd
YsrP4x8eq9yr/61DU1oor+0ulC/WHxot/EfrqJbvn947fe2x2WIdVUr7Dr3i
1+gdUarp8HSxDk2vFHWwWH/Rkv/gi+OiLn5h7Af7R3YPFPaocd8ytLShd+H9
zw6/75nhHx6ZSmyJuOzxirsBhz25crOU8flsmw+iDabnWCU+PmoXknLFb7nw
sVH4mZbEaEs7wcqTwo1NoVwpDrJkKo1x/P4D+dOUrjPl8B737nbaC0g02zBI
Tm1SU5PnWf2oekf6wM88jPecmtvjPeOeq4rtkpH94OcxaalVrvQxq/h4tv55
/MrWrO8j06oe0RYktdOw29t4Liy75RBx4tu2M8iKEda+VHK5pYR6r/6S6Rt4
/mZP/pKXxj/80vjesSXtfjxRB4ZmrzswIg7eL92Z763iO3BPnT797cPTFzYr
t+f96MCwSHyR9Vrd88bcBU8PiXq8Yy7EefTH7RjHfBLO9BbjVze5f5dag/23
8lneUn5HcSWU2yh8T0tu5a987Zf2ZKtpgOBHkQGWjOmLsGzeIne6zWumrCS6
22Wn59ns09YRe1/Hl5iRQL1jvYRlM0cOC8xjTm3b4zrjxbE6ryqOn4W8T7rK
TFqm78zfR9doOFdlnor7eY/KPFW5BUnvNMx7G6eF5bocok58h3b6XjHC25fK
Lrc0qHznnu55/Cu2jn9w4/hntk8emRCJvyT+PTK+tKcv/4Wdox/ZOvmlvdUe
gP/7KzPv//WIqEeOicRf2D2knM/fPbj0vQNT5z85JKo9vxTK3IXN7SafzJzW
QZXi7+7EVjC5tEy1GpgFIDTWb9l99MTcJS+MXfzC2Ff3TYmg1+rw2OKmjrGP
qaf6bzxW7ZPyf7V94n3PDF/07NCLb47tGlwUWb9Lrb/aMv7eJwYveXpwKYkv
2/PmtPMg8etK7N0tc8dwJJTjnYynZQ3MAhCe5eXTC8vLIvenFpYnFk6OFpa3
DxUuen7soudHbzk2c1hkvVoHRxZ++dqIdvH93uNVPSm/sHzqo88Nv/fJoc+s
69/SObVrYFGrnQOLH3t2+D2/GvzSxpGw5i5Uzmd7Sfy6EnN329xYFuOUM56W
NTALQKQe75pXLrKvH32kY/7Q2JJW+4fm/8/BoYvU78bZObJYzfi7Z06KWD/v
sYGvbuzf2j27U816Ueu7CuLFdz828M/7JsOal1C055py2t08TvsOEr+uRNrd
YuTKN+jktDu/mprMd3MDQIh+cHT6A+tGLlo/sm1wUWT9wVGl9gzMXrtjULv4
fmL6ZDXj39Azf+4v+899tP+HO/u39c7v6F/U6s5XZpXXf9n/aHtC36/roHQr
pvOfESXx60qk3W38i7eydzECgATrWf0vbBn//V+P/OELY1rWa9+Cu6tn6nMb
Bt/3zPAFzwx/Y89ky/DCXmPtKdeQTbUMFmtLX+Gz64fPfqTv7DV9a44Mbu8r
iKzfLqpv8caW/DmP9p/zi/6jowtJLxUAAGqN6c69p7vmLnxu6H3PDv/1jokD
I0ta7R9e3Hx87MKnB9/75NB7nxA1+J7H1frV4Hm/GjjvMaXevVapc385oB2/
a9l9tig13N8l6mGl3vmQqN53PNh7/pqe9a+Pbe9bEFm/Ta2rNoyKgc/7RV+h
qlMIAADAhpr4y+XEX902K47iL3h6+J8PTSlZr9beoYU1x4bVfB/ULrWX8r3f
kO8i3HX5/k4l33uVelCJ+Hc80HvWAz1n3a/U793Xc9kvuzcez2tZv613cXPP
4gd/NSDe9dlfDya9SAAAqEHlv5arPY///UP5858aEnXfG3P7h5f2qdUyMP9v
u4sH77p8tx6/92rH7/p8F+Gu1Oqet6/ufvu9Sp15j1JfeaZ7U8eMyPqtav36
ROFsdQzf3Tme9CIBAKAGlRP/sJr4X92hPBF/wZNDW/sX9g0v7hU1tLi7f/6m
7QPG4/feSr4/oOb7/W75/ra7u5S6q+utou7s+t07Om96qXdz1/zWnsUtat32
8ow6np6HX5tOepEAAFCDTp06tbys/TEdpb744sh7Hh9sfG5Y+QM3pWoZKDx6
bPjch8v53mPM924t38/U5/td5XzvFPmu1O2dvyPqtg5R77izY+3Rkc3dhS09
C1rdsGNCG2Ert+0BABCxuZPL56t34l39kvIn7fYMFqtlcHFHz2xuz8AnHuu5
cE33hQ93f0DUQ12i3v+gWg90/b6o+0V1vu8+tVZ3XiDq3o7zRd1jqEsf7ly1
e+CljlkR9JtLif/ldcO/t7rnvAd75hYT+iO5AADUjdaxRe2WvBv3TGpBr9Xu
AVELO3rnt3RMbTo+uen4hKiX3izWRq3aJ17U1QtatU1sKNXzb6jVNvHCm1Ob
Ouc2dy9s6V7YXKoL1/SdeW/3FU/0J70MAACoTSdPKYf2U4vLY4Xl1a9Nazfm
3dE6o2T9gJb1SilfhNu/uFNXO/oqtb13QdS2Um3tKVb5pL0+3K31zJvzb79H
udD/ra2jSS8PAABqk/7OvWu2jmoP2TV3FYpB32/J+nLKK6U8TW/O+l5D1rsE
fbl+fnhau6Pv/mPV/lU+pF2kfxUmrJEn9qdrqmZquenrAbP+5ZDV9Evljwln
eAEAVdI/nfeJpwfftabv4scGlKDvtw36hVLc2x/Ub5U7qN/cZahvbRnX7u47
NFjV3+hBBrjutNVf2u6Rnf+cjP49JD6J7/JO9W/S55py2V0AQJXK37m3d7jw
3keUJ+LfvabvsbY50xH9DuVwfsF09n5bj1KVoO+WDfpNurhvPlFY8Yu+37mt
8+13dCwscdterXPfaTtFfvFvGzj+JuQUy27im9RY4luof4TAu58iWUmADCof
47cMFc55qEf7/pyzH+q94JE+pdYodb6oh3u1eu9DpXqw9z1K9bznAaXOE3V/
qe7refd93cVa3X2uVvcW65x7uop1d9fZd3eddWfnb/+8Q9QnH+1NemEgeh5h
6vBr7ZOAzV47mn05iZ8Nzn/AOthwQD35h62jhgft1Wfti4/bG79RR6m7u87U
vlen/NU66tP3WhWfwS8/hn97hziK1x7G1/LdXD87sfrlfNILANHzClPb32tJ
1WQT7tFkM4mfDSQ+EJw43v+Pg5NXrx+6at3Ql9ep//56sFLPKfUlrZ5V6s+0
emagXH/6tK6eGvjiU+Lf/i9q9aRjXf3MwCOtU6dOJTnv5WPF4g0+ut2D8kr5
z5da/nap+tdNHf+0qeG96mVE/a9td0Smo1aXhlnGbhy5a7Mllojhz7aam17O
jvbK7Nv9PWH94lF/7xWmdhfsixOzWVySl63DaKRLV9oM7tTWUuPcVxun+fMe
s3vEyyW++0prv1Tt5sBtDZTtGpvFoZtRA/uVyjKc2wZks3k6bHqG0Tuck3La
hwTaDwAIUXH7yhWvF5e3v2IAKdtocykCK9um8bfKvku/3RZvDha/1b3ZsB+Q
T3xLw0q7stLYxeibTGN2bLaE8p1OxRGY95XavldplTYRm7mrjEXXjEbPplj3
dLp0aLRphe4F24ALo5EeXWlJ0uJ9B9Yl1lz5rdNqY+0H+TFXn/ieK23phEtT
o2n9Mo7YYw2U6xqXpdHeXloxtUkItu+0Dlf5eCizedptepYm2Z+Tai7/FMJ+
AECISreGGQ9FSgeXp00vFbdO15OF2oDGLdZ0ACuf+OaGOd+6LtFsGWLHZH+8
ox+faYzm2+5spmn3NjPzpHRLyTRG+08A4TfSuytNE27PFT82mNqqC3zZvvA1
5qoTX2Klte9D02L1XANlusZzYVRzVl9287RserZtcjmbE9J+AECIilu3cQNT
NlbL/sR8rGa/w3HaXg1v8ZH41oa5Hxe6NTsQU1tt986GZjksAYmPHsZ3GiZs
PDPufDYgzEbKdKXN0mlq1iexy8DufI25ysSXWmkdetDwXu810Ltr7ISW+PKb
p/dG4/q5M7T9AIAQ2W1f1kuFZfp9t82lTpd9q2V3IHsd3zyIxxNubs2W1K6c
glRO35YvQTpeMbdpl8MSkDnZ4JGlDmewra+E00j/XanFsuHg25CBzquNx8Lw
HHN1iS81pxLLTGIN9O4amQYGTnz5PpXIXJdVNLz9AIAQOSZ+Y/EioYnhnpzS
3ky3B4808b0P8T2b7bU4SnMl0l5kfi5XvBQaT+Kb08N6bbXZfgLJJb752oP6
snoK3m4uHFcbO77GnJ7Ed18DaynxrauUx3ZiOyESH4iP/2A1vr28B3c8/tSP
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
    "], {{0, 166.7142857142857}, {290.57142857142856`, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{168., 168.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{290.57142857142856`, 166.7142857142857},
  PlotRange->{{0, 290.57142857142856`}, {0, 166.7142857142857}}]], "Text",
 CellChangeTimes->{
  3.9343491887520943`*^9},ExpressionUUID->"03cffafc-91ee-0549-8929-\
e6217fb8255b"],

Cell["\<\
Type in %appdata% into the text box Then you will be shown a couple of files\
\>", "Text",
 CellChangeTimes->{{3.934349191458473*^9, 
  3.9343492199930267`*^9}},ExpressionUUID->"b685e784-3615-ca4f-a421-\
f89a7f1e0060"],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellChangeTimes->{{3.9343519191712456`*^9, 3.9343519209901466`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"140a1eb2-9b2f-2c4d-a02d-2dcc9b86acc0"],

Cell[BoxData["\<\"C:\\\\Users\\\\mayan\\\\AppData\\\\Roaming\\\\Wolfram\"\>"],\
 "Output",
 CellChangeTimes->{3.934351921377222*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"9570a845-3f6b-0c4b-b6bc-8fa14bd71b7a"]
}, Open  ]],

Cell["\<\
Running $UserBaseDirectory will show you exactly where the paclet should be \
put in the Applications folder (it differs for versions)\
\>", "Text",
 CellChangeTimes->{{3.934351924276367*^9, 
  3.9343519530639133`*^9}},ExpressionUUID->"38cb1860-672a-2342-99f3-\
de33210d91d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Version 13", "Subsection",
 CellChangeTimes->{{3.9343492262844505`*^9, 
  3.9343492337692375`*^9}},ExpressionUUID->"f0ca34f7-5157-4746-a830-\
e37b8f890244"],

Cell["\<\
If you have Version 13.1-13.3, click into the Mathematica File and then \
Applications, then copy and paste the extracted file into:
C:\\Users\\YOURNAME\\AppData\\Roaming\\Mathematica\\Applications\
\>", "Text",
 CellChangeTimes->{{3.934349236182884*^9, 
  3.9343493435574684`*^9}},ExpressionUUID->"9089043f-8a5c-ae4f-9ad5-\
c49d8bf3233b"],

Cell[BoxData[
 StyleBox[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
Pg9yLSy9xfJ9F8sL271Kj0uvaeFiGRo3MqsGGhEK/106WksPs0rvqF7tT7Pu
9byYb7IKzmsuVf2M1a0gNFVmJwilU75zSce9il36iI7bPs9VP0fAGA0chAY4
yXudz4NcCx3DGAu/HGicg+4ZhOplaN7IrBpsaizrjpcTZ0ctLFav9qeLPsGg
XXVLCbNWsXOzV7eC0FSZpSC02HbXW/LU8q6s8YfxW9k9Qr1P8kFvJVrrINRZ
hhKD0OJOd+bXSsOl/emlbzBYqrz6R+OOp2eFIDRVZioIpdjfeZNC48hz12H8
GW+XmXEDfmssv+ut50ne7Xwe6FrIPk1X58tWMjVWv4ujsKmxuZiETp483XRo
Oqt3tqtjzXS5WfpEHiY72/08Bs3NXN0KQlNlxoJQR9Oa7shM7U/fxr9zBHWW
PkCwTgzwd4SqNwt1nuRLq1ZvEF3h1FjHa7N3XCpI7WbpQbaT339U2cisGvxb
Y8c6/rjAwlPhmFWPjPani/7XRedng/yCqXQIM1G3gtBUmfogBOuKBnC2DH68
OkcoZn5OcMxKuy5K298pJwjBOGkAZ8ugx6vjzqg5QWilSrsuStvfKScIwThp
AGfLAMcrTslUYo8gtDKlXRel7e+UE4RgnDSAs8XxGo/S6rm0/Z1yghCMkwZw
tjhe41FaPZe2v1NOEIJx0gDOFsdrPEqr59L2d8oJQjBOGsDZ4niNR2n1XNr+
TjlBCMZJAzhbHK/xKK2eS9vfKScIAQDFEoQAgGIJQgBAsQQhAKBYvYPQp9sE
IQBgXdqzZ8/OnTu7BaHPtwlCAMC6FFLQ5s2bBSEAoFiCEABQLEEIACiWIAQA
FEsQAgCKNZEgdNGmuTtumLvvvfFnw1375i6+aLS7BQDQ30SC0E3XzZ3//Z9/
69/OvfWNDf/j32z4s6/OPfPBCzdeONo9AwDoYyJB6Lbr5/7nN/7WX35r7v+e
2vB/Xrzwf7+48b99fesXfuuq5z6153c/dfXv/vpV4efzn7zy8792xbF7t23e
tGG0uwwAEE0kCN16w+b/fmr/X/zBbX/xH27785du+fN/f/v/++7jf3X+H7fC
z7l/2Dr76daPfqP1o1/7q9ee+k9fuX/7JZuatnH7c2dbi84+d/vCkqdOLT3q
qe9qA24HRuTYyXNtp08caP9+4MTpuODcyWO1NeOi6kualnS+ZOn5Xi9pWCcV
qLrd7oVcUfGW37NWkNp2229Z28C45QVul2a5dsJTAxQvbqDrio0bGWzLwKpM
ZkTopne//cqzP/vx7/zsjc/97Pw/+dm5z7TeCCnoROvsM63Xf7P1+q+3fvSJ
1mtPt1791TNfe7AhCLVD0Kmnln99buGxIMQsysPNYn96LEaAhR42TwPh99Th
dr5kec1Kj7n0kgMnThxLb9d1I7V10q8NAatLIVdUvI4lWdxaWHj6dH3NXgFi
XHpkkkHiysJeNETHPhsRhGANTSQI3X7Tu9959dnWm/+s9eY/bb3x2db5f9Q6
9w9aZ38zDgS1fhgi0JOtV3+l9cqHz3z13loQWohByylomSDEDEqpIQs6Dc/F
p1Oa6HxJ/sKOjaSXzOVbaT/f631r2zhRXaNrIVdUvMW184Gg5aGVkyc711zY
7MkpyAPDB6He6whCMG4TCkJ73nnlM60fhwj0mda5326d/a3W6yECfbL1w4+3
XvtY69WPhgjU+v4HW99//5mv3FUNQt1yUAwwTy3OmKUoE5YuWnxRyjntZxYW
Ls+ynXqq23bydCQpMTIdwaCSKbrkoPpLuiWNhhy0tNFe71uJMuFhLb40rJsN
/wxYvLn8ZR2P44O8WPF105AHegxqZU81zxwuT6tlo2CV9Ro2cvrEie5bXgyN
fcaZgO4mE4QOXP3O959pnf/thduBzv79dgT6ROu1v9t69YnWDx5vvfJo6+Wj
re8daX33wTNfvmX7JRs7X/zc2eYY0g42yxmnEpby/BMeZHEqLOhYt3E7ghBr
ojGQLPZ1XcJJw0uW51vy23lqYzVZL9sjCHX2xPVws1zyjkJ2D0Jdild9t8rU
WHhU2+cpCULLlm6/qgShrJzHTvYMftkONmwkq7WuW15YbeKVAjNtQkHoyne+
9xut14+3Xv9U60d/b+F2oNd+tfWDj7ReOdb6/iOtl/9O67u/3Prufa3v3HPm
929sCEI9RoTqWWV5SGg5CJ09m0WZ9oBQlmwatyMIsSb6jAg19ae9slM+o1Tt
gjtCSJf37bJO7xGhzn540OJlr68OitRCVXbH98T7/AFGhLJxnqZAm4/tLD9X
3cdqPXbb8jTUCcy2yQShG6945z9/YvF2oNeebP3gVxbnwl5+uPW9wzECtf7k
7tYf337mX16/fWvlDwwNco/Q0uPlddNA0kIwWkhCnZuI02OnqjddC0KssV73
6uQ5IntmFS/pef9Rl3GfjqGPHvcp955Y61K8fEGPW2LaGzh2YjnbTb7THzAI
dZuoGj4I1W9Nn3idwGybSBC6bf+u//XHH128HegHj7Uj0PvbEej+1nfubf3J
wRCBWn/03tYf3viHv7e3FoSyu3uihm+NLT1OyxaCTkekqaeZpajUmHk6p9IE
IUal/o2qpe9jdXR/lW+PdfsSVp4gut9u1OV96zNp2crVzr9WyPyt+xav56LK
BNC5fFxs8p3+IPcI9Ziu6jE1Vv3yYJepsf51CqzIRILQtVdu+o//fO9//cb8
n/3r6xZ+vn7df/n6NX/6tWv+9Kt733zh3T9+Yc8bX9nzxpevPv/lq37nY9sv
6vdnhJr+jlBHgGmvc+rU2crYztKUWPV26n5TbKdOGRFilJaGXrI+sWNSpeGe
58pLlkdvlrdRjU71oZ3OjTSvk15f6Wzrd/lWe/hexevck95fksp3ZRo6/ZXe
LN19aqxjtfod48vV1uVmaVNjMBoTCULBhvCzof8PFK96r8/avASgUJMKQgAA
EycIAQDFEoQAgGIJQgBAsQQhAKBYghAAUCxBCAAoliAEABRLEAIAiiUIAQDF
EoQAgGIJQgBAsQQhAKBYghAAUCxBCAAoliAEABRLEAIAiiUIAQDFEoQAgGIJ
QgBAsQQhAKBYghAAUCxBCAAoliAEABRLEAIAiiUIAQDFEoQAgGIJQgBAsQQh
AKBYghAAUCxBCAAoliAEABRLEAIAiiUIAQDFEoQAgGIJQgBAsQQhAKBYghAA
UCxBCAAoliAEABRLEAIAiiUIAQDFEoQAgGIJQgBAsQQhAKBYghAAUCxBCAAo
liAEABRLEAIAiiUIAQDF6haEPt0mCAEA61i3INSDIAQArA+CEABQLEEIACiW
IAQAFEsQAgCKJQgBAMUShACAYglCAECxBCEAoFiCEABQLEEIACiWIAQAFEsQ
AgCKJQgBAMUShACAYglCAECxBCEAoFiCEABQLEEIACiWIAQAFEsQAgCKJQgB
AMUShACAYglCAECxBCEAoFiCEABQLEEIACiWIAQAFEsQAgCKJQgBAMUShACA
YglCAECxBCEAoFiCEABQLEEIACiWIAQAFEsQAgCKJQgBAMUShACAYglCAECx
BCEAoFiCEABQLEEIACiWIAQAFEsQAgCKJQgBAMUShACAYglCAECxBCEAoFiC
EABQLEEIACiWIAQAFEsQAgCKJQgBAMUShACAYglCAECxBCEAoFiCEABQLEEI
ACiWIAQAFEsQAgCKJQgBAMUShACAYglCAECxBCEAoFiCEABQLEEIACiWIAQA
FEsQAgCKJQgBAMUShACAYglCAECxBCEAoFiCEABQLEEIACiWIAQAFEsQAgCK
JQgBAMUShACAYglCAECxBCEAoFiCEABQLEEIACiWIAQAFEsQAgCKJQgBAMUS
hACAYglCAECxBCEAoED/H6l4Vgk=
     "], {{0, 138.}, {330.4285714285714, 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->{168., 168.},
     RasterInterpolation->"High"],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{489., Automatic},
   ImageSizeRaw->{330.4285714285714, 138.},
   PlotRange->{{0, 330.4285714285714}, {0, 138.}}], "Text"]], "Text",
 CellChangeTimes->{
  3.9343493222140923`*^9},ExpressionUUID->"80a88b21-c645-834c-94e3-\
01d89db14cf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Version 14", "Subsection",
 CellChangeTimes->{{3.934349359190813*^9, 
  3.9343493604010906`*^9}},ExpressionUUID->"a678a9b4-0b94-b84a-91bd-\
6a9c2495d97f"],

Cell["\<\
If you have Version 14 (as I am writing this, this is the newest version of \
Mathematica \[MathematicaIcon])
You will need to put it into someplace else\
\>", "Text",
 CellChangeTimes->{{3.9343493627999077`*^9, 
  3.934349411593464*^9}},ExpressionUUID->"2f6e1fea-67e4-5e45-aff3-\
7d24b08b950d"],

Cell["C:\\Users\\YOURNAME\\AppData\\Roaming\\Wolfram\\Applications", "Text",
 CellChangeTimes->{{3.934349414966568*^9, 
  3.9343494291543274`*^9}},ExpressionUUID->"2d1c8a3c-2f96-ff46-987d-\
fbd958ae3b23"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnX+QXVWB513T4TeCoqMdutOdTtJJp9PdQX4lQQoCIiAwQlZwAGOiRhGc
0RV/jbPosrNBcWuNO384bNVWuY6oWILrrvuHRSygAju1tU5mRhBRhASUnXXc
qhW0xv0xW87b8+5597xzf5xzz/197nufT32rc/u8c++777777vn0Oee+rHvX
B3e/9+Uve9nLPnyC+LH7nR/fdfvt7/zEPz5d/HL9Bz586y0feM/+Kz/wkffc
8p7bt79rlShc/49e9rLnRf3+8kmrN8icHObZZ547Wfs1RybWp2e1IVqdU1ZH
M5HM3DCDOnOpOdWaUybWiZxqziu0JB6dlYnWmU0rn03EVJ6d04Ikymf0hHVm
LDltsKkZY1ZpCZ/XqXLZzNacdVoKr1ggc4a41FmvxVQusiHIekO5PRtFXrFq
Qyw5yzdGk1pozKkZmU/EVJ7MpmROyZHN2ZnIyMmlc9LEpjCbs7M6d05cvalY
TlA5rniOT8txx80ff3x6jsvIRntWx3KCyIbUTBjK5UOJrE/PifbMqayyZV3+
zA5z0rpoZvW8PJFVibz8pBlr1gYxlScz7ZYpGfwEPynoJ5UpSpNykldR8JNc
fmL0FukV9frJRLV+EhUVqRwDMwnLG/WTZCrwkwKWckIsvvhJhpykK8rxGyLp
G8jGMKX9JENR8JMcfnISflKln6xLk5OCioKf4Cf1+Ek/I+InE4OcsqqfVDkp
6iebItahe0vLflKZohSXk3KKkuonxws/MShKSTlx8JONmX6Spij4SRN+cpI/
fpKiKK5+YlcU/AQ/acRMxtNPco/v5FcURz9JVZR5g34EcfSTgaI4jfKU95Ms
SzH5ySZzSilKhX5ik5N8flJYTrzwE6ucJP3ERVpGyk/ecdMHn3nmOZXf/OZ/
CUVR+Tdf+HI7frLaICed8RN78BOf/SSXfuAnZTL/iqF1uCiKeXAn7icpOSWp
KBNaHP0kMtaTYSmNK0pQaPOT4oqSLif5LcVgJlE/SVOUquWkZT/JMpOkijj2
q4yUn8TyjCf9JxFLyecnFkvxxk9yzFHBT5r1kwJ9I/jJIGGdfH7ioCiWEZ+8
fjKfLif1+ImjpSTFI/9Yj5ZCfmKxlAwzyako1flJGTNp2U/c5AQ/8d9PEu7h
5ieBhzTgJ6o8l5zgJ/iJF36SVJSc3tKsn0wk58EW8JMwE26KMuGgKOXmorj5
ibOiZPiJpQslxU9c5cTNT1zlJKEoVfec1O8n1vt38vuJ+7wU/AQ/SalTk58Y
gp8UHqYZJT8xpS4/iSpK3Dfy+4njLJSm/CRVUSIVavGTVEtJyEliHCePn1jH
bjYnUshPUhRlPkymnKT5yXFl5cTqJ0kzMTpJ1YM77n4yh5/gJ/jJyPmJRS3w
k1J+EipKimYU9pOYohg7VRrwk6SixCtk24jBTzaFyaco+e/TcTcTi6IMRKWo
n8zHknCPLDMJU9hMXP3Eoc+k0juLHf0k6SQV+8mqLDnx0E/ucZ8Qi5/gJ576
iV0t8JOyfmLykEr8RA36pCjKwE8M3lKVn0zU4SebonEf6ynzVWzuX2xi8pPN
+fxktaOc5EgNftLWnFh3PxkO6xhu86nGTzLjm5+cVExOCviJJipF/GR1W35i
rNOinzjGJhsx5cjrM/jJSPiJ1Vuy/aRM8BPzPNji33NS3k+cu1Dmh/HaT3J/
J1tVc07y3LwzkA3zbcj4SVN+YpETu59kKErlfpJRx38/cVWUifH0E0czGVM/
SRvlqcVPHMZ3jH4iFcXNT8xykjHEYzeQiGyY/cSoKCW+56RyRck1UbYuPzm+
Pjk5PnvCSZqflOk8yfG1J9bvcMNPuuAnNkvBT4oqyjj6SS45GQs/yVSU+vwk
Y35sTFE0OTFOUAmnqUT8xNhDYp8lm9k9kqIoaX6Sbinlvuek4v9nJ4+ieOcn
2TfsFPETs5xU9n/uzK3SauInHfSTuXjwk+oVZTaaEfaTvHIyLn4SZKP5XuP2
/CQzWXNoMybBGr8LJcVP7MqR5Sfx+uW+56Sy/2cnp6LMJ/wkMle2lJ8MFaVS
M8ntJ1YzqdRPJvCTiv0kMfE19SH8pMN+klAU/GT0/cT+XW2N+0keRdHmmSSS
6Sd5vgvFbeDG1U9OdveTfIpSTRdKaCkxIcn82pOyfnJ8hf/PTk45We0oJxX5
SVJO8JNyfpJUjswK+ElJP2lgiKeLfuKiFuPgJzkspWN+4mwpZf0kz3ehOE9/
tStKpLCir2IrcK9xHkVx/c7YFv2klJnU4Sd5O0/wE/ykg35S5408nfQTR7Wo
xE/WZcmJD37ipCjl/MT4XW31+omDomT5SdYUlJzfheI+A9bal5JfUXJaSsWK
0oCfRL5Ftgo/ySknFfpJ3mknVftJoCiRCrN2b+m+n6QqB37SmJ8UUZRR9BN3
r6jKT3L1sbTlJ9mKUsJPbN91b/cQP/zE/H/xFLrXOM09LF8YW52f5O5IqWgu
So7/E7CsmeSylKqGdar1kywzWW+Skyr95MTZeLrmJzkVZaT85NQsORkVP8m6
Nwc/ycorgtTmJ3NpclK7nyQUpS4/ObWknLj7SVJO4oqS9V0oE3aHKfU9J5X5
SRu9KIl5sKZUKScuimI0k0Jy4uon5b6TzSInlflJUk5O9HN8Z6AoJ66eNeWk
BnOyJRMz8fTLZ+JJVptYe8rETCyiMCgvlVO1mModMp2IqTwzU3nzionpIFPW
TCcSrbCqkkxXlLVuKbNuJKcGsdaZMSSzgsxskNTCKnNqItqjfQdLVFinxVRu
zClhUgtzJOPrGfs5edXcyRNZWSWrGW4/dM0GlZMm1kezwZr1lpyYK6vz5YTS
OX71nHuOy5vjbFl93DprZlNyfMFMOOYEY1adMGPPhDVpq6w1Z3qYE9cOohfG
cqItLz9xypozg5jKk1mjsurEM1dFS5J5zSsXLPkdp2xOxKWOc07fFE+/fFM8
yWpBXqsltbBAXqfFVO6Q+URM5ZnZGE1qYSSTp88H2WjNfCLRCqdVkvmKsskt
ZdaN5HVBiq1bIpvzZ0Hldadtfl20JChMT/DoFpHEQ1u0mMqNeW1VOX3RJb+T
mdPCuFS2ZasW95rGyq8pllfmy6uL5gyRV+XOqyrLFkte+aqFeM4oktPP2OyU
V9ty2qs32XO6OZnrGjLfz2s2DSJ/NeU19my0ZkMQU3nZzEwv2zObnaVEXOpE
ss6SqUQcqxmzNa0kR+a0mMqbzaIWU/miuZqppuMzlk+Lh67WLCWSWaGOLIdJ
LWw66yrLimfZpme2nxVztumZmVqpMtO1Z23ZLKdlZe1a10yvXa47U2uXnDLT
ZLY2nDNnFq3ZEsRUnp6pREw18ZMCfqJUxOItzaa8n5gq53pq/CQWu5wkK4yU
n0iLqNNPTKJSt71IA3FRFEc/qVROavCT0jbi6CfLZiFZDtOQnHjpJ03Lydj4
SYai2Pxk2kFOGveTzH6VZlOfnzQjKq2LRE3BT5rxE2UjzfSxRPzEKiH2DPtY
POkVadBP0kQlw0z6acZMcitKQ7rSpJksymT5id1bfPCTZQc5yVCUxv1ka+Vy
YveTmgXGBz/J3AJ+klkBPympKI36SQkzicdnOanZT0JLye45aVpOfOpUabjb
ZFGPxUPMFTzyk5npJZVC/S1ZfjJdoZxUKSRpipLSDFXYx7JuanFdSoNeiZ/Y
13LZPfwklq74SS3S0rifOI7+VOMnFcqJk6KMsJzY5pm02XlSSlE6LCej5yfL
tftJ3jkqLSlKaktUqZ+kbqSAn+RVFMc9RE704Cet+0lds1Aq95MMRRlVOclQ
FPykeTlx9RNrHS/8pJDSpA3xWPpGavGTGi3FJBV1+slWQ3NfWA/GyiLqC34y
kuM7bSjKCPefxF3FLxspIif4SR45sfjJ1i077Vkyx7zWDhHzijtSspBW6J6F
YtkusrywI5a08u2JmMpbz/laUgvjWVnYnsj5iSTrjGliBzyr/g6Z1DdLPZqa
5JnpUidRf6dK9NGdWlILvc0FhsILlhZ2RnNBF7PVki3tZLG57OxnsZ8tnmVh
cYdTtlab7W3kfD2bDXGpY1kluvp5qSnsJ9a1dlgVxSoYVfmJq7c4+kmsfbGr
i4d+YlOU1lv8biWnn9jerLr9ZHkE/eSCMKmFylKaNIo3jLyiNO8nrduIH3Iy
Un5ikpMyfpKqKFmrlPCTYopi8pNsRcFP8JMa/cT+ZuX1k+WccmL2k2S73xU/
sTjJTu3XbsfmJ20oCn4ytn7i6Bst+snWfHLimZ9kKMr4+IlRUVpv8buVZvwk
a9TGSU50RTF3nnTUT3YaxnR2dl1R0j1kzPzEK0VxlZOR8xN32ajDTxac/SRn
PPOTLEuJyonJW2KNi59yYveTdEtpvcXvVir0k8KjNqUzGn6yc/T8xOYhY+In
ix75SQ4zqd5PWjGTgZ/kNQ38pKyfOE1HcfcTb5PpJ3FFab3F71aq85MGPMTd
TzqZpJx0eqAnYxynvVGeKvtG7Fm8wJQOyEmVftKinGwvoBmV+8mCV34yTGYF
B/dw1xi3TpWkn4RjQB4mt5+gKPhJR2Pyk64oSu5JJqPvJ7b47icjISd2PzEL
RnE5adxPUmat5PGTQopSu59EFMVjP9meJSfpioKl4CddjEVRpKW0LiFV+klL
qWWSSU45adhPxrLzJPe0E/ykyuTxE4OiDOK3n+Q1GRQFP+lq3PzE0y9FGVc/
SbOULDlpzE/G0ky2u/iGVTAKmgl+UkxO7JYyKn4SV5TWW3//4+4nWUceP6nd
Twxp30w65Ce1yEl8eokvfjKucpLhJ6l1XPzERU7wkzJ+Yr0HeQSCn1TvJ25H
vkU/GR1FcVMRTxXFWz+pp8PE5CdOcuKpn1QmJ/iJJ35i149hnRdffOkzdx3E
Txxz912f6/V69331/jT9cFSUwUZ0REnrSlAyP33+Z/oreufb31eTn4gnEnH2
k3YVZdC+//T5F574/pN6ix+cRQ+oXx956DFRx6QH+95+q6ivfn38+0+KXy31
G+8tUTJQXFHuvuvz8piUUZGvffUBcVjEwmeCrYmfhf3kkYcfE1vovrq0byM+
dZ746yemOjX5SVjYop+YFCVSpyE/cXOYqJykeoup9TE2T3/781987PY7qvIT
0crI9jG/n8QlRzW479zzPvGr2LKlvZZ16vAKeXwq8ZNHHn5ULj/y0KMvvfhS
hX6y7FanDj8Jjs8nS1qKaHbFAVHGIn6V77guMEJRXPxEtuPtdZUMI47MR2//
VJqEFFGUx/ufrBekXZT3E6fOk4SfPP74k0JL2u1UiSnKz3/+i498+FNlZ574
ISdtm4kP6pKuHPY6lftJrLw9PxlYylYtaX7y+Rr9pGw3S7J9MTU96c2TaHxF
01CVogRNQ//nvj3vi8pJDkWJ+YnSD0svSn1+oo5PhX6yEhyiMl0o9gPYpJ8I
OQmOTylFkYIhfkpFCSz3hcBYht0pwaPZfhKqTvs9J0JOxNUjUJSkKuRWFPEC
5c99e26ryk8y5CQhKl75iYyQE3GQA0VxuHE4zz07yEkbipLUBpc6VfpJsjzT
MaQkyI5x8fmSJfLXvXtulXW+FvzNJRHLokR8mkSUaYhPVv+zmagZfFv+DvGQ
WFabDZwk4iefueugKA82uEPfQr/HNSEYwWXkVm144qASD/FE6oVIP7nvq/eL
ZbFlOTIiSkRDptaVHiK2IPZEloufokTtaviHZ0E/qVBRghfS7zkR7YvYSeUn
YuNCLV4Kd1iN/shqTwS98eHfy+l+shJWViqiVlkJnleVyKENfYTokYceLawB
FSqKxU/0oR9VeHdwvg1eQriiPAiqvjyGsaMqXq88kvveLqXuoHaeKAMcblye
fq0ritiHYECnvyy2phlLv0tEKcfd4XWg/2EMO1iUnzzy0GPaQXvsvqA5lsM9
crRIO09eUD7T75x5+LHwo/r5+8JP9+PRIacCIzvOiuLqFY/3T4DHVPmLL/5K
XJ3UpeBr4eiPrPZ4eG6IBX07Ujl6/YvnbXJZv6CJDYoSeTmS9KttuUA9i6wj
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
YCzIyfj4iboxZ+T9JNVDOuonFvHonJ/UsatVvTWyIy6419grG7H7iXsdn/1E
t5GCs1PsfrLVwU8iDuC3n2wt6SdF5aRjfuLpnJPzHSqMl58Mvs0gHAyq2k9s
3oKfVOUny27tcusSkssl2vUTfXCwN/wiFH/kxL2TpB0/qTS6ohSYOluo/2Qh
YSYdSfP9J2M5stP6tNiCfrJQg5zU3X+SNzn9pIb/6dikH9l1UloZH/ykZEbP
T8rvcA3H2Ss5aS6pc0sa9JMi3SY5siW93CQAnntLw34yrmbSYT+pI607SWk/
qdRS7GZiUxT8xMfUsc/j4SdNd48U8JOKHCbmDxVJixrHicmJ1U9Sxn1yx36N
bU9UkBP8BD+pVlFydLOMr5+UafTz7kMd/tC2nGz31U9q72NJ9Y3G/WRnLX6y
MPQT+39MXHXwk2b9pHo58cFPMu0FPzHpRwVzaPGTAm13Wy7hiZ/UeZxb9JOq
HKaIxpiUY3SGeJLdKfXKSaao1KYf1SlK/UKyw+/Ok9b9xKV3BT9JNZBq7vGp
fhgorZXBT/ATTT8yK3gbRz+pRlGSltJ5RUneUFx994hL/Tq7R6pQlEZ6S3bo
GXszSRqIS+8KfpI37cqJzU+W/LiRBz8ps/3ScjImflJEUVwGehqxlKRa5NIY
c5207zwpZCn262c1HS/1+olVVxr2E+QkYSAuvSv4SRf9JOVardSl04qiGnEf
XKKml9aIn1gUpXUD8ctP/BjoydvNkttP8itKJX6ScRHGT8bPT7ab5QQ/GXk/
GVpK622xD239GPuJSVFaN5DCxuIuJ7YKqTLQhp/stMqJo6Kk+0na5a4BRcl9
EWZ8pz1jadFPXHpXWsjM9LI/mS2epWJZVyBTxbI1SLKkSOaicamTjEsdUi5L
iThWS0/yvMpVeZ1DBecsh0ktjMWlTjuZLZIVcxKPTg+SdrmT5bGYLo8udZbd
6mRkbU1Z65Tp2rNkfSg9U7kyU3m2tpfFirIlLRl1WneSsfGTpYSfVKYojhqT
ukrbLfioxmIOuSr77yfLaSUmOWlIUXSdqMFPzJYybYzJT6KW4iIepdwjT4bP
2JictKErNfjJSCkKflJeUQr6SUFL6bif5OpmIflj14y89Qv6iUVRyplJXsdo
2U9qUxSLn+iXJqOflBCGhi/L+Mno+YlSAvxk5BSlMj8prigm38BPPIjXfpJc
vTpRMRlIScMpaynN+clU6qWpKj9pIaM4vuMkJD6N79TaK9KYnyT1I9thWj//
CyjKzPTSTF8qOteLkpyCUtxVTL6Bn3iQDD9JHP+W/aQiRbHrh7+KUpGfaA+l
KUrrF9WW5cRBUUbBTLohJz74iVMfS+sfgbyKIuXErCg+z0XRGyb8ZITTDT/J
ZTL5/SRVP5pWFJeBnqJyYn7U0IXSuY6UuibKGnTFQz8ZUTmp0E/yOoxFTvCT
fH6SbS+5r+R2RSkyxOPoMPiJJ36SeJtc5cRkEfhJSUUp4ifTWY9m9AB3I6Pr
J52Qk1r9ZGtFnSfV9rHE/WQnAAAAgGdMAgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA32zatKntXQDf4SQBAICG2bp1
a9u7AL7DSQIAAA1D0wOZcJIAAEDD0PRAJpwkAADQMDQ9kAknCQAANAxND2TC
SQIAAA1D0wOZcJIAAEDD0PRAJpwkAACCzVftWbzh92XmL93d9u54xHnnnXdz
wPbt26vaJk0PZMJJAgCgEHLS9i5E2Pzmm2eWzmlxBxYXF2+88cbNmzaJ3HTT
TeLXSjZL0wOZcJIAwHjyzn37YpkM/UQsi0b5wgsvXLNmTQN7Mjs7+5bf/d29
e/fK3bjqzW9WD4n92fKWdzepKCsrK8kjY8r8/HyxZynT9Fxx+eU/efpp8TNW
ftE9f154m+Ah+AkAgEL1n8zNzV1zzTUXXXRRA08q5OTiiy+enp6OlU+tnxf7
I342rCjnnHPOmy67zF5n165dZYZ7Cjc9Qkv+8siR5597TvyMKcrVj/YK709X
+O6hQ+K1O+bLf/Znbe9vKfATABhb1kyt3Xz13jPXrlMl+vjO7OzszTff3MBu
7N27V5cTsVcbL7p6y7X7F65+x6Y3vW0yEJUmFWVp61ahTPY6V1555VnbthV+
imJNj5QT8VM0vmpZPeruJ3fccUcvpMBujADHjh374he/qJf88pe/FIflyJEj
4qG29ioGfgIAY8vc+ZcsvvXW9TvfpEpi80/koE/d6M8ytXHL5mv2iR0TlqLX
kYqydktxJXBnw/r1N9xwg73O7t27N5f479sKND26kAg/iZVMOvvJtddeK9pi
tRxrpl3WGgHEq9Y9RJiJP1qiwE8AYDxZc+bUlmv3z2w9e8vu9yoZaNdPxC4J
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
A0D5rnM=
    "], {{0, 124.71428571428571`}, {315.4285714285714, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{168., 168.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{477.85714285714283`, Automatic},
  ImageSizeRaw->{315.4285714285714, 124.71428571428571`},
  PlotRange->{{0, 315.4285714285714}, {0, 124.71428571428571`}}]], "Text",
 CellChangeTimes->{
  3.934349452191061*^9},ExpressionUUID->"6b595eb0-425e-644c-8d32-\
45d3a5de787d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialising the Paclet", "Subsection",
 CellChangeTimes->{{3.9343494670069637`*^9, 
  3.934349481620081*^9}},ExpressionUUID->"51164a71-c67b-304f-8196-\
512c685a8b81"],

Cell["\<\
As it is now directly into the Mathematica Kernel, open a new Mathematica \
Notebook and type the code:\
\>", "Text",
 CellChangeTimes->{{3.934349488977459*^9, 
  3.9343495228526936`*^9}},ExpressionUUID->"0c5c9be9-db9a-2e49-9494-\
246d2c57ac3c"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Chakshu`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9343495238480263`*^9, 3.934349527328026*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"deef41b4-d842-e048-9fe5-ba0e87f636fc"],

Cell["\<\
Once it has been intialised, you can test this by doing ?averageValue\
\>", "Text",
 CellChangeTimes->{{3.9343495319681015`*^9, 
  3.9343495495314217`*^9}},ExpressionUUID->"902c574d-b08f-ca46-8daa-\
87f0cd9eae8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "averageValue"}]], "Input",
 CellChangeTimes->{{3.934349552552742*^9, 3.934349554218382*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"72c773b7-99f6-db41-8aaa-ed052d4984e0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"averageValue\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"f\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\\
!\\(\\*\\nStyleBox[\\\",\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\"a\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\",\
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"b\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\nCalculate the Average Value of a function on the interval x\
\[Element][a,b]\\nf: Name of a defined function\\na: Left endpoint of \
interval\\nb: Right endpoint of interval\\nOutput: Average Value of f over \
the interval. Exact if exact input given.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"averageValue", "[", 
                    
                    RowBox[{
                    "Chakshu`Private`f_", ",", "Chakshu`Private`a_", ",", 
                    "Chakshu`Private`b_"}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"Chakshu`Private`max", ",", "Chakshu`Private`min",
                     ",", "Chakshu`Private`x"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Chakshu`Private`min", "=", 
                    RowBox[{"Min", "[", 
                    RowBox[{"{", 
                    RowBox[{"Chakshu`Private`a", ",", "Chakshu`Private`b"}], 
                    "}"}], "]"}]}], ";", 
                    RowBox[{"Chakshu`Private`max", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"{", 
                    RowBox[{"Chakshu`Private`a", ",", "Chakshu`Private`b"}], 
                    "}"}], "]"}]}], ";", 
                    FractionBox[
                    RowBox[{
                    SubsuperscriptBox[
                    "\[Integral]", "Chakshu`Private`min", 
                    "Chakshu`Private`max"], 
                    RowBox[{
                    RowBox[{"Chakshu`Private`f", "[", "Chakshu`Private`x", 
                    "]"}], 
                    RowBox[{"\[DifferentialD]", "Chakshu`Private`x"}]}]}], 
                    
                    RowBox[{"Chakshu`Private`max", "-", 
                    "Chakshu`Private`min"}]]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Chakshu`averageValue\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"averageValue\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"f\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\\
!\\(\\*\\nStyleBox[\\\",\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\"a\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\",\
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"b\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\nCalculate the Average Value of a function on the interval x\
\[Element][a,b]\\nf: Name of a defined function\\na: Left endpoint of \
interval\\nb: Right endpoint of interval\\nOutput: Average Value of f over \
the interval. Exact if exact input given.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2.933593820381377, 7.066406179618623}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               
               ImageSizeCache->{
                10., {2.933593820381377, 7.066406179618623}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*\nStyleBox[\"averageValue\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"[\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"f\",\nFontWeight->\
\"Bold\"]\)\!\(\*\nStyleBox[\",\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"a\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\",\",\nFontWeight->\
\"Bold\"]\)\!\(\*\nStyleBox[\"b\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"]\",\nFontWeight->\"Bold\"]\)\nCalculate the Average Value of a \
function on the interval x\[Element][a,b]\nf: Name of a defined function\na: \
Left endpoint of interval\nb: Right endpoint of interval\nOutput: Average \
Value of f over the interval. Exact if exact input given.", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Chakshu`averageValue, {Chakshu`averageValue[
         Pattern[Chakshu`Private`f, 
          Blank[]], 
         Pattern[Chakshu`Private`a, 
          Blank[]], 
         Pattern[Chakshu`Private`b, 
          Blank[]]] :> 
       Module[{Chakshu`Private`max, Chakshu`Private`min, Chakshu`Private`x}, 
         Chakshu`Private`min = Min[{Chakshu`Private`a, Chakshu`Private`b}]; 
         Chakshu`Private`max = 
          Max[{Chakshu`Private`a, Chakshu`Private`b}]; (1/(
           Chakshu`Private`max - Chakshu`Private`min)) Integrate[
            Chakshu`Private`f[Chakshu`Private`x], {
            Chakshu`Private`x, Chakshu`Private`min, Chakshu`Private`max}]]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "Chakshu`averageValue"|>, False]]], "Output",
 CellChangeTimes->{3.9343495547922916`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"a576d1f7-c82b-424b-8105-9eeeeb22cf52"]
}, Open  ]],

Cell["If this shows up, then the Paclet has correctly worked", "Text",
 CellChangeTimes->{{3.9343495579761887`*^9, 
  3.9343495760097656`*^9}},ExpressionUUID->"f63ed3f6-fb3f-764b-a6b0-\
23343143655e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["CreatePacletArchive", "Subsection",
 CellChangeTimes->{{3.934349701206169*^9, 
  3.934349706682291*^9}},ExpressionUUID->"2186158f-2d45-fa4f-aeef-\
ead872475c98"],

Cell["\<\
Once the Needs[] function has worked, you now have to run the \
CreatePacletArchive[] command\
\>", "Text",
 CellChangeTimes->{{3.934349710618099*^9, 
  3.9343497383666897`*^9}},ExpressionUUID->"0d3e61f0-bb06-f74a-9166-\
7ef8d144157e"],

Cell[BoxData[
 RowBox[{"CreatePacletArchive", "[", 
  RowBox[{
   TagBox[
    FrameBox["source"],
    "Placeholder"], ",", 
   TagBox[
    FrameBox["destdir"],
    "Placeholder"]}], "]"}]], "Input",
 CellChangeTimes->{{3.934349739101782*^9, 
  3.934349746070303*^9}},ExpressionUUID->"204a3b15-0bb3-2749-8bdc-\
a6349cd6c89e"],

Cell["\<\
The source is where it is:
VERSION 13 \[Rule] \
C:\\Users\\YOURNAME\\AppData\\Roaming\\Mathematica\\Applications\\Chakshu
VERSION 14 \[Rule]  \
C:\\Users\\YOURNAME\\AppData\\Roaming\\Wolfram\\Applications\\Chakshu\
\>", "Text",
 CellChangeTimes->{{3.934349756631716*^9, 3.9343497661943283`*^9}, {
  3.934350062471092*^9, 3.934350089088316*^9}, {3.9343508326639233`*^9, 
  3.93435084321953*^9}},ExpressionUUID->"8039e579-218c-d24c-88ba-\
76cbbe0e02c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreatePacletArchive", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\mayan\\\\AppData\\\\Roaming\\\\Wolfram\\\\Applications\\\
\\Chakshu\>\"", ",", 
   "\"\<C:\\\\Users\\\\mayan\\\\OneDrive\\\\Desktop\\\\Mayanka Perera - \
Mathematica\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.934349739101782*^9, 3.934349746070303*^9}, {
  3.934350825356983*^9, 3.9343508576928215`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5b9453d4-6054-cb4c-8291-023723f9aa6c"],

Cell[BoxData["\<\"C:\\\\Users\\\\mayan\\\\OneDrive\\\\Desktop\\\\Mayanka \
Perera - Mathematica\\\\Chakshu-1.0.0.paclet\"\>"], "Output",
 CellChangeTimes->{3.9343508620177135`*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"1eaab7d6-e435-a04a-9d90-0017c00f4a16"]
}, Open  ]],

Cell["\<\
Once it shows this, the paclet should show up in your desired destination\
\>", "Text",
 CellChangeTimes->{{3.9343508710803623`*^9, 
  3.9343508854904404`*^9}},ExpressionUUID->"58708945-14ea-c944-85e5-\
616ac1c3d79a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
VfcvR5wnpBDEDQCajRs3Tp82zXtIj7inTp26YcOGVatWNaA80tqrV6+eMGGC
FT5+2nmyPPJvg929ZMmSi9eujY/T0dExmpnzEffJ0tcv9fefOnlS/rXcfekL
YsTlyQrP9/bKuid8/eBf/qXZ5R0ViBsANNrabeMnzrx067iJU/Qhc6pcDoSv
vvrqBpRHjrVNa8tSzVh16eyN+VmXXnv+xVfkSgZvpLvnXnCBfJaIj7N+/fqF
CxaM+BQj65OVteVfaSX9Xh9NLu4HHnhABIygGGOAoaGhp556ygx59913ZbP0
9/fLQ80qlQXiBgCXqf+wZs5lt0xbfrEOsda41fx5vTHPMn7G7JkbrpMFk/o2
4yh3T5w9clcmRz7YXH755fFxNm/ePHMU/w2IEfTJpqmluK2QXGJxb9y4UUpK
v7f8lSTVGEDW2hS0VHZ6fK1B3ABg0TZuvBzVTrpg8ezNN2lLNlfcskjS2l47
F8UtSztvWQPKM378+K1bt+qPevRtDsOvuuqqyZMnj/gUI+iTf/azn2lHK3Hn
Su5+vrdXvU8objWuHO7Z48W9ZcuWmI81pIZT5eZsg2yQAwcO1LCcNWkQxA0A
FpMXrTjvosvkm/Mu3Dx1aXktu7nilgNtNTfeNn6CfKKYvqJTlVBZe8qSlQ0o
jML0si6efmOZfQSMsk/W4jZJPlUuneV6SnpZTZ7rsafSmQz5zW9+o6fWvYLb
uXPnD3/4Q/VevpEfE5akiZiz5bLu8slEvjlQQgeqKsto5nOLjKCffHRCi5o0
yAhukqVLl8riPf7442bg3hJmiIwgo8nIIygVADQRObaVLynKmZdulVrMlTaQ
N1fcsiST5i6ZvvJzcy67RT5OTFn82fLmtMZaO1eaCZ81a5ZVPP0myVx6PM0V
d66kLakkOfrWH7Ww+kuoN+akevxUuVJVVqydK82Wq2qa8+Ra3DJEN46quAxR
jpYfVXz5MWaCffQNMoKb5MiRI+ph4+abb1YhUtkqRLtbHlIhMvLICgYATUGO
Z2d+7uqJs+ap13lrt0xe8JlcU8U9buKUOVtum735pqmfWds2YZI6VPw5WMOt
nQvvPXPFnWT3Wjy1Evea//nqjI7Pq/da3DJk1e4XkuSjhpO58LyxdrT0mh6T
Jlnj3lliGNUYPrXdVa5qLU2tq6nFLcJIiatDsh3Ug40Kid8hMMoGQdwAYCJH
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
    "], {{0, 99.}, {282.4285714285714, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{168., 168.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{405.8571428571428, Automatic},
  ImageSizeRaw->{282.4285714285714, 99.},
  PlotRange->{{0, 282.4285714285714}, {0, 99.}}]], "Text",
 CellChangeTimes->{
  3.934350902104088*^9},ExpressionUUID->"4a2a3261-7f30-be44-b4d0-\
9e0396ba1dd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["PacletInstall[]", "Subsection",
 CellChangeTimes->{{3.934350922220703*^9, 
  3.9343509286447506`*^9}},ExpressionUUID->"dadc1c44-1098-f44d-abe2-\
fa431021143c"],

Cell["\<\
Once all the other steps have been completed you just use PacletInstall[] to \
install the Paclet and all the commands should work\
\>", "Text",
 CellChangeTimes->{{3.934350929887434*^9, 
  3.9343509540279255`*^9}},ExpressionUUID->"25344948-114f-954a-a4f7-\
b4098aac7b62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\mayan\\\\OneDrive\\\\Desktop\\\\Mayanka Perera - \
Mathematica\\\\Chakshu-1.0.0.paclet\>\"", ",", 
   RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.934350955262932*^9, 3.9343510230957317`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"88c1605b-2c2f-3b46-8b3c-fae04fa26062"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Chakshu\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Chakshu\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\mayan\\\\AppData\\\\Roaming\\\\Wolfram\\\\\
Paclets\\\\Repository\\\\Chakshu-1.0.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"A set of functions for helping with high school \
mathematics subjects.\"", Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Chakshu", "Version" -> "1.0.0", "MathematicaVersion" -> "12.0+",
     "Updating" -> Automatic, "Description" -> 
    "A set of functions for helping with high school mathematics subjects.", 
    "Creator" -> "mayankaperera", 
    "Extensions" -> {{"Kernel", "Root" -> ".", "Context" -> {"Chakshu`"}}, {
      "Documentation", "Language" -> "English", "MainPage" -> 
       "Guides/Chakshu"}}, "Location" -> 
    "C:\\Users\\mayan\\AppData\\Roaming\\Wolfram\\Paclets\\Repository\\\
Chakshu-1.0.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.934350975926811*^9, {3.9343510111455517`*^9, 3.934351024468155*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"22bc837e-424e-b047-b1b4-d95e34a752a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "statPoints"}]], "Input",
 CellChangeTimes->{{3.934351026366211*^9, 3.934351037389036*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"cc525b8a-6289-2546-8f6b-f59553fb816a"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"statPoints\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"f\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\\
!\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\nFinds \
coordinates and nature of stationary points of a given function.\\nf: Name of \
a defined function\\nOutput: Coordinates of stationary point and nature (Max, \
Min or Inconclusive)\\n\\nNote: Further work is required if the second \
derivative is 0 at any of the stationary points.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"statPoints", "[", "Chakshu`Private`f_", "]"}], 
                    ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "Chakshu`Private`x", "}"}], ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Chakshu`Private`x", ",", 
                    
                    RowBox[{"Chakshu`Private`f", "[", "Chakshu`Private`x", 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "Chakshu`Private`f", "\[Prime]\[Prime]", 
                    MultilineFunction -> None], "[", "Chakshu`Private`x", 
                    "]"}], ">", "0"}], ",", "\"Min\"", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "Chakshu`Private`f", "\[Prime]\[Prime]", 
                    MultilineFunction -> None], "[", "Chakshu`Private`x", 
                    "]"}], "<", "0"}], ",", "\"Max\"", ",", 
                    "\"Inconclusive\""}], "]"}]}], "]"}]}], "}"}], "/.", 
                    "\[VeryThinSpace]", 
                    RowBox[{"Solve", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    "Chakshu`Private`f", "\[Prime]", MultilineFunction -> 
                    None], "[", "Chakshu`Private`x", "]"}], "\[Equal]", "0"}],
                     ",", "Chakshu`Private`x"}], "]"}]}]}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"Chakshu`statPoints\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox[
             TagBox[
              TooltipBox[
               StyleBox["\<\" Symbol\"\>", "InformationRowLabel",
                StripOnInput->False],
               "\"Symbol\"",
               TooltipStyle->"TextStyling"],
              Annotation[#, "Symbol", "Tooltip"]& ], "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"statPoints\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"[\\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"f\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\\
!\\(\\*\\nStyleBox[\\\"]\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\nFinds \
coordinates and nature of stationary points of a given function.\\nf: Name of \
a defined function\\nOutput: Coordinates of stationary point and nature (Max, \
Min or Inconclusive)\\n\\nNote: Further work is required if the second \
derivative is 0 at any of the stationary points.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2.933593820381377, 7.066406179618623}}],
               True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               
               ImageSizeCache->{
                10., {2.933593820381377, 7.066406179618623}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*\nStyleBox[\"statPoints\",\nFontWeight->\"Bold\"]\)\!\(\*\n\
StyleBox[\"[\",\nFontWeight->\"Bold\"]\)\!\(\*\nStyleBox[\"f\",\nFontWeight->\
\"Bold\"]\)\!\(\*\nStyleBox[\"]\",\nFontWeight->\"Bold\"]\)\nFinds \
coordinates and nature of stationary points of a given function.\nf: Name of \
a defined function\nOutput: Coordinates of stationary point and nature (Max, \
Min or Inconclusive)\n\nNote: Further work is required if the second \
derivative is 0 at any of the stationary points.", "Documentation" -> None, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, Chakshu`statPoints, {Chakshu`statPoints[
         Pattern[Chakshu`Private`f, 
          Blank[]]] :> Module[{Chakshu`Private`x}, 
         ReplaceAll[{Chakshu`Private`x, 
           Chakshu`Private`f[Chakshu`Private`x], 
           If[Derivative[2][Chakshu`Private`f][Chakshu`Private`x] > 0, "Min", 
            If[
            Derivative[2][Chakshu`Private`f][Chakshu`Private`x] < 0, "Max", 
             "Inconclusive"]]}, 
          Solve[
          Derivative[1][Chakshu`Private`f][Chakshu`Private`x] == 0, 
           Chakshu`Private`x]]]}], "SubValues" -> None, "DefaultValues" -> 
    None, "NValues" -> None, "FormatValues" -> None, "Options" -> None, 
    "Attributes" -> {}, "FullName" -> "Chakshu`statPoints"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9343510383615437`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"aa7145a2-c67c-404d-956d-d829cf63583e"]
}, Open  ]],

Cell["Don\[CloseCurlyQuote]t forget to do <<Chakshu` so it runs", "Text",
 CellChangeTimes->{{3.9343521240844555`*^9, 
  3.9343521441090355`*^9}},ExpressionUUID->"ad3e5988-eea6-6740-8adb-\
66fe9359b514"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1224, 698.5714285714286},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"cee4b065-bd0c-b54e-b24a-fd4401ded7e2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 207, 4, 95, "Title",ExpressionUUID->"e6f37238-6fe6-0443-aea2-f11ebdf6899b"],
Cell[CellGroupData[{
Cell[808, 30, 265, 5, 33, "Subsection",ExpressionUUID->"96e5cfa5-8219-3d4e-b588-1ecefcd57b6f"],
Cell[CellGroupData[{
Cell[1098, 39, 1097, 20, 54, "Text",ExpressionUUID->"3c21b3e9-d7d4-574c-9c37-5b2d412d5db6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2198, 61, 591, 10, 39, "Input",ExpressionUUID->"ad98d4c7-c1a9-8445-8c2c-6f1b7756010b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2838, 77, 197, 3, 33, "Subsection",ExpressionUUID->"52d7a88b-cf8b-8248-b983-d1f5cbf77f5a"],
Cell[3038, 82, 272, 6, 32, "Text",ExpressionUUID->"16b05503-5187-614f-b6a9-8d2e6c25b7eb"],
Cell[3313, 90, 228, 5, 32, "Text",ExpressionUUID->"443b70ba-c31f-a04e-8146-412788dd3a44"],
Cell[3544, 97, 19288, 321, 180, "Text",ExpressionUUID->"03cffafc-91ee-0549-8929-e6217fb8255b"],
Cell[22835, 420, 228, 5, 32, "Text",ExpressionUUID->"b685e784-3615-ca4f-a421-f89a7f1e0060"],
Cell[CellGroupData[{
Cell[23088, 429, 193, 2, 39, "Input",ExpressionUUID->"140a1eb2-9b2f-2c4d-a02d-2dcc9b86acc0"],
Cell[23284, 433, 211, 3, 39, "Output",ExpressionUUID->"9570a845-3f6b-0c4b-b6bc-8fa14bd71b7a"]
}, Open  ]],
Cell[23510, 439, 286, 6, 32, "Text",ExpressionUUID->"38cb1860-672a-2342-99f3-de33210d91d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23833, 450, 162, 3, 33, "Subsection",ExpressionUUID->"f0ca34f7-5157-4746-a830-e37b8f890244"],
Cell[23998, 455, 349, 7, 54, "Text",ExpressionUUID->"9089043f-8a5c-ae4f-9ad5-c49d8bf3233b"],
Cell[24350, 464, 10654, 181, 218, "Text",ExpressionUUID->"80a88b21-c645-834c-94e3-01d89db14cf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35041, 650, 160, 3, 33, "Subsection",ExpressionUUID->"a678a9b4-0b94-b84a-91bd-6a9c2495d97f"],
Cell[35204, 655, 305, 7, 54, "Text",ExpressionUUID->"2f6e1fea-67e4-5e45-aff3-7d24b08b950d"],
Cell[35512, 664, 204, 3, 32, "Text",ExpressionUUID->"2d1c8a3c-2f96-ff46-987d-fbd958ae3b23"],
Cell[35719, 669, 17919, 299, 202, "Text",ExpressionUUID->"6b595eb0-425e-644c-8d32-45d3a5de787d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53675, 973, 173, 3, 33, "Subsection",ExpressionUUID->"51164a71-c67b-304f-8196-512c685a8b81"],
Cell[53851, 978, 255, 6, 32, "Text",ExpressionUUID->"0c5c9be9-db9a-2e49-9494-246d2c57ac3c"],
Cell[54109, 986, 219, 3, 39, "Input",ExpressionUUID->"deef41b4-d842-e048-9fe5-ba0e87f636fc"],
Cell[54331, 991, 223, 5, 32, "Text",ExpressionUUID->"902c574d-b08f-ca46-8daa-87f0cd9eae8e"],
Cell[CellGroupData[{
Cell[54579, 1000, 199, 3, 39, "Input",ExpressionUUID->"72c773b7-99f6-db41-8aaa-ed052d4984e0"],
Cell[54781, 1005, 14387, 331, 221, "Output",ExpressionUUID->"a576d1f7-c82b-424b-8105-9eeeeb22cf52"]
}, Open  ]],
Cell[69183, 1339, 200, 3, 32, "Text",ExpressionUUID->"f63ed3f6-fb3f-764b-a6b0-23343143655e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69420, 1347, 167, 3, 33, "Subsection",ExpressionUUID->"2186158f-2d45-fa4f-aeef-ead872475c98"],
Cell[69590, 1352, 245, 6, 32, "Text",ExpressionUUID->"0d3e61f0-bb06-f74a-9166-7ef8d144157e"],
Cell[69838, 1360, 324, 11, 41, "Input",ExpressionUUID->"204a3b15-0bb3-2749-8bdc-a6349cd6c89e"],
Cell[70165, 1373, 461, 10, 76, "Text",ExpressionUUID->"8039e579-218c-d24c-88ba-76cbbe0e02c3"],
Cell[CellGroupData[{
Cell[70651, 1387, 471, 9, 58, "Input",ExpressionUUID->"5b9453d4-6054-cb4c-8291-023723f9aa6c"],
Cell[71125, 1398, 259, 3, 39, "Output",ExpressionUUID->"1eaab7d6-e435-a04a-9d90-0017c00f4a16"]
}, Open  ]],
Cell[71399, 1404, 227, 5, 32, "Text",ExpressionUUID->"58708945-14ea-c944-85e5-616ac1c3d79a"],
Cell[71629, 1411, 14554, 244, 156, "Text",ExpressionUUID->"4a2a3261-7f30-be44-b4d0-9e0396ba1dd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86220, 1660, 165, 3, 33, "Subsection",ExpressionUUID->"dadc1c44-1098-f44d-abe2-fa431021143c"],
Cell[86388, 1665, 282, 6, 32, "Text",ExpressionUUID->"25344948-114f-954a-a4f7-b4098aac7b62"],
Cell[CellGroupData[{
Cell[86695, 1675, 393, 7, 39, "Input",ExpressionUUID->"88c1605b-2c2f-3b46-8b3c-fae04fa26062"],
Cell[87091, 1684, 22581, 397, 66, "Output",ExpressionUUID->"22bc837e-424e-b047-b1b4-d95e34a752a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109709, 2086, 198, 3, 39, "Input",ExpressionUUID->"cc525b8a-6289-2546-8f6b-f59553fb816a"],
Cell[109910, 2091, 13795, 324, 221, "Output",ExpressionUUID->"aa7145a2-c67c-404d-956d-d829cf63583e"]
}, Open  ]],
Cell[123720, 2418, 203, 3, 32, "Text",ExpressionUUID->"ad3e5988-eea6-6740-8adb-66fe9359b514"]
}, Open  ]]
}, Open  ]]
}
]
*)

